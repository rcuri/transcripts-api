name: Terraform setup and plan
inputs:
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  github_token: 
    description: 'GitHub token for auth'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true  
  aws-access-key-id: 
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  cli-config-credentials-token:
    description: 'API Key for Terraform'
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ inputs.cli-config-credentials-token }}
    
    - name: Interact with Terraform
      shell: bash
      run: terraform --version

    - name: Terraform Init
      id: init
      shell: bash
      run: terraform -chdir=./tf init
    
    - name: Terraform Plan
      id: plan
      shell: bash
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform -chdir=./tf plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
        
    - name: Import existing resources
      id: import-resources
      working-directory: ./tf
      shell: bash
      run: |
        terraform import aws_lambda_function.get_transcript_status_lambda_function transcriptai-dev-get_transcript_status

        terraform import aws_lambda_function.generate_transcript_lambda_function transcriptai-dev-generate_transcript

        terraform import aws_lambda_function.get_games_lambda_function transcriptai-dev-getGames

        terraform import aws_lambda_function.get_play_by_play_lambda_function transcriptai-dev-get_play_by_play

        terraform import aws_lambda_function.submit_transcript_request_lambda_function transcriptai-dev-submit_transcript_request

        terraform import aws_lambda_function.update_generate_transcript_status_lambda_function transcriptai-dev-update_generate_transcript_status

        terraform import aws_lambda_function.process_sqs_queue_lambda_function transcriptai-dev-process_sqs_queue

        terraform import aws_cloudwatch_log_group.main_api_gw '/aws/api-gw/dev-transcriptai'

        terraform import aws_cloudwatch_log_group.generate_transcript '/aws/lambda/transcriptai-dev-generate_transcript'

        terraform import aws_cloudwatch_log_group.get_games '/aws/lambda/transcriptai-dev-getGames'

        terraform import aws_cloudwatch_log_group.get_transcript_status '/aws/lambda/transcriptai-dev-get_transcript_status'

        terraform import aws_cloudwatch_log_group.get_play_by_play '/aws/lambda/transcriptai-dev-get_play_by_play'

        terraform import aws_cloudwatch_log_group.submit_transcript_request '/aws/lambda/transcriptai-dev-submit_transcript_request'

        terraform import aws_cloudwatch_log_group.update_generate_transcript_status '/aws/lambda/transcriptai-dev-update_generate_transcript_status'

        terraform import aws_cloudwatch_log_group.process_sqs_queue '/aws/lambda/transcriptai-dev-process_sqs_queue'

        terraform import aws_lambda_event_source_mapping.event_source_mapping a949199e-31a0-458c-96e4-7145f5b8db30       

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.terraform_directory }}/tfplan

